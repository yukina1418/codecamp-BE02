/* 

    시간복잡도의 O(n) : Linear Time 표기법은
    데이터의 크기에 따라서 처리되는 시간을 결정합니다.

    100개의 문자열 데이터를 가지는 배열이 하나 있다고 가정했을 때
    이 배열에서 "a" 값을 가지는 문자열 데이터가 어떤 인덱스에 있는지를 알아보려고 합니다.

    이때, O(n) 방식은 배열의 맨 처음 데이터부터 끝 데이터까지 100번 반복하여
    해당 데이터들이 "a" 값을 가지는지를 확인합니다.

    만약 55번째 인덱스가 "a" 값을 가졌다면,
    최소 56번의 반복문을 진행해야만 인덱스 값을 가져올 수 있습니다.

    이러한 방식으로, 일정 크기의 데이터 만큼 반복 실행하는 시간복잡도를
    O(n) 이라고 합니다.

    ----

    문제
    
    O_n 함수는 숫자 데이터가 담긴 배열 데이터 arr 와
    해당 배열 데이터에서 찾을 숫자 num 을 매개변수로 받습니다.

    두 개의 매개변수 데이터를 받아왔을 때
    배열에서 num 데이터를 찾을 때까지 반복하여
    num 데이터가 위치하는 인덱스 값을 O(n) 의 시간복잡도로 리턴해주세요.


    !! 반드시 O(n) 의 시간복잡도를 이용해 문제를 풀어주세요.
    !! 배열에 주어지는 숫자 데이터들은 모두 고유한 값입니다.

    ----

    입력 예시

    1. O_n( [10, 9, 4, 8, 7, 6, 2], 6 )

    2. O_n( [99, 126, 87, 39, 0, 101, 55], 87 )
    
    ----

    출력 예시

    1.  5
    
    2.  2
    
*/

function O_n (arr, num) {
    // 여기에 코드를 작성하세요

}

module.exports = O_n;